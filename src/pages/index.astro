---
import DefaultLayout from "../components/LayoutDefault.astro";
import Button from "../components/Button.astro";
import { yearsInIndustry } from "../js/yearsInIndustry";
import SpeedInsights from "@vercel/speed-insights/astro";
---

<SpeedInsights />
<DefaultLayout documentTitle="Kaung Si Phyo">
  <div id="background" style="z-index: 0;">
    <section class="container" style="z-index: 1; position: relative;">
      <h1>
        <span class="intro-welcome">Hello and Welcome, I'm</span><br />
        <span class="intro-name text-swipe-animation">Kaung Si Phyo.</span>
        <span class="cursor"></span>
      </h1>
      <h2 class="intro">
        Crafting Memorable <br class="intro-break" />Digital Experiences
      </h2>
      <div class="desc-container">
        <div class="blur-bg">
          <p class="desc">
            I am a diligent student at Singapore Polytechnic, currently pursuing
            a diploma in Information Technology with a minor in Data Analysis
            and AI. My passion for technology is matched by my commitment to
            developing scalable web applications.
          </p>
          <p class="desc">
            With over {yearsInIndustry} years of experience specializing in JavaScript,
            React, Node.js, and Python, I've honed my skills in software development
            while also diving deep into data analytics. My academic and project works
            reflect a blend of technical expertise and a strong understanding of
            data-driven decision making.
          </p>
          <p class="desc">
            I am also proactive in sharing my knowledge with peers, helping
            others understand complex concepts and encouraging a culture of
            innovation and continuous learning.
          </p>
        </div>
      </div>

      <div class="button-container">
        <Button
          variant="outline"
          size="md"
          colorScheme="orange"
          href="/Kaung Si Phyo Resume.pdf"
          gap="10px"
        >
          View Resume
          <svg
            style="margin-left: 5px"
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 20 20"
            height="1em"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              fill-rule="evenodd"
              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
              clip-rule="evenodd"></path></svg
          >
        </Button>

        <Button
          href="/projects"
          variant="outline"
          size="md"
          colorScheme="green"
        >
          View projects
          <svg
            style="margin-left: 5px"
            stroke="currentColor"
            fill="currentColor"
            stroke-width="0"
            viewBox="0 0 20 20"
            height="1em"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              fill-rule="evenodd"
              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
              clip-rule="evenodd"></path></svg
          >
        </Button>
      </div>
    </section>
  </div>
</DefaultLayout>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"
></script>
<script src="https://cdn.jsdelivr.net/npm/vanta/dist/vanta.net.min.js"></script>

<style lang="scss">
  h1 {
    line-height: 2.5rem;
    margin: 1rem 0;
  }

  .intro-welcome {
    color: var(--color-mint);
    font-family: var(--font-family-IBM-Plex-Mono);
    font-weight: 600;
    font-size: var(--font-size-base);
  }

  .intro-name {
    font-family: var(--font-family-Mukta);
    font-size: var(--font-size-14xl);
    display: inline-block;
    padding: 10px 0;
    color: var(--color-mint);
  }

  .intro {
    color: var(--color-silver-250);
    font-size: var(--font-size-10xl);
    line-height: 3.25rem;
    margin: 1rem 0;
  }

  .desc {
    color: var(--color-silver-50);
    font-size: var(--font-size-lg);
    line-height: 1.5em;
  }

  .blur-bg {
    background-color: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 8px;
    grid-column: 1 / 2;
    padding-left: 5px;
    padding-right: 5px;
  }

  .desc-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);
    margin: 1.5rem 0;
  }

  @media screen and (max-width: 980px) {
    h1 {
      line-height: 1.75rem;
      margin: 0.5rem 0;
    }
    .blur-bg {
      backdrop-filter: blur(5px); 
    }

    .intro-name {
      font-size: var(--font-size-10xl);
      line-height: 3rem;
    }

    .intro {
      font-size: var(--font-size-3xl);
      line-height: 2rem;
      margin: 0.5rem 0;
    }

    .intro-break {
      display: none;
    }

    .desc-container {
      display: block;
    }

    .button-container {
      display: flex;
      flex-direction: column;
      row-gap: 20px;
    }
  }

  .cursor {
    display: inline-block;
    width: 20px;
    height: 4rem;
    opacity: 0;
    background-color: var(--color-mint);
    margin-left: 10px;
    animation: blink 900ms steps(2, start) infinite;
  }

  @keyframes blink {
    50% {
      opacity: 0;
    }
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const effectSettings = {
      el: "#background",
      mouseControls: true,
      touchControls: true,
      gyroControls: false,
      minHeight: 200.0,
      minWidth: 200.0,
      scale: 1.0,
      scaleMobile: 1.0,
      color: 0x15ff93,
      backgroundAlpha: 0,
      THREE: THREE,
    };

    function adjustVantaForDevice() {
      if (window.matchMedia("(max-width: 768px)").matches) {
        // Mobile settings
        return VANTA.NET({
          ...effectSettings,
          points: 5,
          maxDistance: 15,
        });
      } else {
        // Desktop settings
        return VANTA.NET({
          ...effectSettings,
          points: 10,
          maxDistance: 20,
        });
      }
    }

    const effect = adjustVantaForDevice();
    effect.resize();

    let nameElement = document.querySelector(".intro-name");
    nameElement.addEventListener("animationend", () => {
      let cursor = document.querySelector(".cursor");
      cursor.style.opacity = "1";
    });

    // Re-apply settings on window resize
    window.addEventListener("resize", () => {
      effect.destroy();
      adjustVantaForDevice().resize();
    });
  });
</script>
