---
import DefaultLayout from "../components/LayoutDefault.astro";
import SpeedInsights from "@vercel/speed-insights/astro";
import DevLogo, { devIcons } from "../components/DevLogo.astro";
---

<SpeedInsights />
<DefaultLayout
  documentTitle="About"
  documentDescription="I'm Kaung Si Phyo, a student pursuing Diploma in Infomation Technology with the minor of Data analysis and AI in the Singapore Polytechnic."
>
  <section class="container">
    <h1 class="main-heading text-swipe-animation" id="greeting">
      <!-- Value inserted via greeting.js -->
    </h1>
    <div class="intro">
      <p>
        I'm Kaung Si Phyo, a student pursuing Diploma in Infomation Technology
        with the minor of Data analysis and AI in the Singapore Polytechnic.
      </p>
    </div>

    <div class="main-section">
      <img
        class="profile-photo hero-img"
        src="/images/profile_pic.JPG"
        alt="Kaung Si Phyo"
      />
      <div class="main-section-text">
        <p>
          I am quite proficient in technologies such as JavaScript, TypeScript,
          React, HTML, and CSS. I have a keen interest in design and UI/UX, and
          I also have experience with back end development using
          Node/Express.js, SQL/NoSQL, and REST/tRPC and DevOps using AWS, SST,
          docker and terraform.
        </p>
        <p>
          I'm passionate about solving problems and building efficient,
          organised systems that are fast, performant and accessible to
          everyone.
        </p>
        <p>
          During my free time, I enjoy activities such as reading, cooking, and
          gaming.
        </p>
      </div>
    </div>
  </section>

  <div class="container" style="margin: 2em auto;">
    <h1 class="sub-heading">Tech Stacks</h1>
    <section class="icon-container">
      <div class="card">
        <h1>Frontend</h1>
        <div class="icon-row">
          {
            devIcons
              .filter((icon) => icon.tag == "frontend")
              .map((icon) => <DevLogo icon={icon.title} />)
          }
        </div>
      </div>
      <div class="card">
        <h1>Backend</h1>
        <div class="icon-row">
          {
            devIcons
              .filter((icon) => icon.tag == "backend")
              .map((icon) => <DevLogo icon={icon.title} />)
          }
        </div>
      </div>
      <div class="card">
        <h1>Database Management</h1>
        <div class="icon-row">
          {
            devIcons
              .filter((icon) => icon.tag == "database")
              .map((icon) => <DevLogo icon={icon.title} />)
          }
        </div>
      </div>
      <div class="card">
        <h1>Programming Languages</h1>
        <div class="icon-row">
          {
            devIcons
              .filter((icon) => icon.tag == "lang")
              .map((icon) => <DevLogo icon={icon.title} />)
          }
        </div>
      </div>
      <div class="card">
        <h1>DevOps Tools</h1>
        <div class="icon-row">
          {
            devIcons
              .filter((icon) => icon.tag == "devOps")
              .map((icon) => <DevLogo icon={icon.title} />)
          }
        </div>
      </div>
      <div class="card">
        <h1>Mobile App Devlopment</h1>
        <div class="icon-row">
          {
            devIcons
              .filter((icon) => icon.tag == "mobile")
              .map((icon) => <DevLogo icon={icon.title} />)
          }
        </div>
      </div>
    </section>
  </div>
</DefaultLayout>

<style lang="scss">
  .main-section {
    display: flex;
    gap: 2rem;
    margin-top: 1rem;
    align-items: center;
  }

  .profile-photo {
    width: 200px;
    border-radius: 250px 750px 250px 750px / 750px 250px 750px 250px;
    animation: wobble 10s ease-in-out alternate infinite;
    box-shadow: 0px 0px 100px #01f53e64;
  }

  .sub-heading {
    align-items: center;
    text-align: center;
  }

  .icon-row {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: space-around;
  }

  .icon-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    max-width: 1280px;
  }

  .card {
    filter: drop-shadow(0 0 3rem rgb(21 255 147 / 35%));
    border: 1px solid var(--color-mint);
    border-radius: 10px;
    padding: 20px;
    padding-bottom: 40px;
    box-shadow: 0 4px 8px rgba(82, 134, 79, 0.1);
    text-align: center;
  }

  @media screen and (max-width: 1200px) {
    .icon-container {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
      margin: 2em auto;
      padding-left: 25px;
      padding-right: 25px;
    }
  }

  @media screen and (max-width: 980px) {
    .main-section {
      gap: 1rem;
      display: block;
      word-break: break-word;
    }

    .profile-photo {
      float: left;
      width: 152px;
      margin: 10px;
    }

    :global(.devicon) {
      width: 45px !important;
      height: 45px !important;
    }

    .icon-container {
      display: block;
    }

    .card {
      margin-bottom: 30px;
    }
  }
  @keyframes wobble {
    50% {
      border-radius: 750px 550px 350px 750px / 350px 750px 550px 450px;
    }
    100% {
      border-radius: 750px 250px 750px 250px / 250px 750px 250px 750px;
    }
  }
  @keyframes jump {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .jumping {
    animation: jump 0.5s ease;
  }
</style>

<script>
  import { greeting } from "../js/greeting";

  let greetingContainer = document.getElementById("greeting");

  greetingContainer!.innerText = greeting();
  document.addEventListener("DOMContentLoaded", () => {
    const icons = document.querySelectorAll(".icon-row .devicon"); // Adjust selector to match your actual icons
    console.log(icons);
    function randomJump() {
      icons.forEach((icon) => icon.classList.remove("jumping")); // Remove class from all icons
      const randomIcon = icons[Math.floor(Math.random() * icons.length)]; // Pick a random icon
      randomIcon.classList.add("jumping"); // Add the jumping class to make it animate

      setTimeout(randomJump, 1000); // Schedule the next jump in 1 second
    }

    randomJump(); // Start the random jumping
  });
</script>
