---
import type { Skills } from '../types';

export const devIcons: { title: Skills, filePath: string, tag?: string }[] = [
  { "title": "JavaScript", "filePath": "/images/dev-logos/javascript.svg", tag: "lang" },
  { "title": "TypeScript", "filePath": "/images/dev-logos/typescript.svg", tag: "lang" },
  { "title": "React", "filePath": "/images/dev-logos/react.svg", tag: "frontend" },
  { "title": "Next.js", "filePath": "/images/dev-logos/nextjs.png", tag: "frontend" },
  { "title": "Astro", "filePath": "/images/dev-logos/astro.png", tag: "frontend" },
  { "title": "Node.js", "filePath": "/images/dev-logos/nodejs.svg", tag: "backend" },
  { "title": "HTML", "filePath": "/images/dev-logos/html.svg", tag: "frontend" },
  { "title": "CSS", "filePath": "/images/dev-logos/css.svg", tag: "frontend" },
  { "title": "Tailwind CSS", "filePath": "/images/dev-logos/tailwind.svg", tag: "frontend" },
  { "title": "Python", "filePath": "/images/dev-logos/python.svg", tag: "lang" },
  { "title": "MongoDB", "filePath": "/images/dev-logos/mongodb.svg", tag: "database" },
  { "title": "PostgreSQL", "filePath": "/images/dev-logos/postgresql.svg", tag: "database" },
  { "title": "MySQL", "filePath": "/images/dev-logos/mysql.svg", tag: "database" },
  { "title": "Redis", "filePath": "/images/dev-logos/redis.svg", tag: "database" },
  { "title": "Linux", "filePath": "/images/dev-logos/linux.svg", tag: "devOps" },
  { "title": "Docker", "filePath": "/images/dev-logos/docker.svg", tag: "devOps" },
  { "title": "AWS", "filePath": "/images/dev-logos/aws.svg", tag: "devOps" },
  { "title": "Git", "filePath": "/images/dev-logos/git.svg", tag: "devOps" },
  { "title": "Figma", "filePath": "/images/dev-logos/figma.svg", tag: "frontend" },
  { "title": "Bootstrap", "filePath": "/images/dev-logos/bootstrap.svg", tag: "frontend"},
  { "title": "Android", "filePath": "/images/dev-logos/android.svg", tag: "mobile" },
  { "title": "Cloudinary", "filePath": "/images/dev-logos/cloudinary.svg", tag: "database" },
  { "title": "Express.js", "filePath": "/images/dev-logos/express.svg", tag: "backend" },
  { "title": "Firebase", "filePath": "/images/dev-logos/firebase.svg", tag: "database"},
  { "title": "jQuery", "filePath": "/images/dev-logos/jQuery.svg", tag: "frontend"},
  { "title": "Java", "filePath": "/images/dev-logos/java.svg", tag: "backend" },
  { "title": "Java", "filePath": "/images/dev-logos/java.svg", tag: "lang" },
  { "title": "MUI", "filePath": "/images/dev-logos/mui.svg", tag: "frontend" },
  { "title": "Microsoft SQL server", "filePath": "/images/dev-logos/mssql.svg", tag: "database"},
  { "title": "NextAuth", "filePath": "/images/dev-logos/nextauth.png", tag: "backend"},
  { "title": "Prisma", "filePath": "/images/dev-logos/prisma.svg", tag: "database" },
  { "title": "React Native", "filePath": "/images/dev-logos/react-native.svg", tag: "mobile" },
  { "title": "Spring Boot", "filePath": "/images/dev-logos/spring.svg", tag: "backend" },
  { "title": "Supabase", "filePath": "/images/dev-logos/supabase.svg", tag: "database" },
  { "title": "S3", "filePath": "/images/dev-logos/s3.svg", tag: "backend" },
  { "title": "tRPC", "filePath": "/images/dev-logos/trpc.svg", tag: "backend" },
  { "title": "Terraform", "filePath": "/images/dev-logos/terraform.svg", tag: "devOps" },
  { "title": "SST", "filePath": "/images/dev-logos/sst.svg", tag: "devOps" }
];

interface Props {
  icon: Skills;
  size?: number;
}

const { icon, size = 60 } = Astro.props;

const logo = devIcons.find(devIcon => devIcon.title === icon);

if (!logo) {
  throw new Error(`${icon} does not exist in devIcons`);
}
---
<style>
.hithere {
  animation: hithere 1s ease infinite;
}
@keyframes hithere {
  30% { transform: scale(1.2); }
  40%, 60% { transform: rotate(-20deg) scale(1.2); }
  50% { transform: rotate(20deg) scale(1.2); }
  70% { transform: rotate(0deg) scale(1.2); }
  100% { transform: scale(1); }
}

.shake {
  animation: shake 2s ease infinite;
}
@keyframes shake {
	0%, 100% {transform: translateX(0);}
	10%, 30%, 50%, 70%, 90% {transform: translateX(-10px);}
	20%, 40%, 60%, 80% {transform: translateX(10px);}
}

.swing {
	transform-origin: top center;
	animation: swing 2s ease infinite;
}
@keyframes swing {
	20% { transform: rotate(15deg); }	
	40% { transform: rotate(-10deg); }
	60% { transform: rotate(5deg); }	
	80% { transform: rotate(-5deg); }	
	100% { transform: rotate(0deg); }
}

.hinge {
  animation: hinge 2s ease infinite;
}
@keyframes hinge {
  0% { transform: rotate(0); transform-origin: top left; animation-timing-function: ease-in-out; }  
  20%, 60% { transform: rotate(80deg); transform-origin: top left; animation-timing-function: ease-in-out; }  
  40% { transform: rotate(60deg); transform-origin: top left; animation-timing-function: ease-in-out; } 
  80% { transform: rotate(60deg) translateY(0); opacity: 1; transform-origin: top left; animation-timing-function: ease-in-out; } 
  100% { transform: translateY(700px); opacity: 0; }
}


</style>
<img
  class="devicon"
  src={logo.filePath}
  alt={logo.title}
  title={logo.title}
  width={size + "px"}
  height={size + "px"}
/>

<script>
  import tippy, { createSingleton } from 'tippy.js';

  const tippyInstances = tippy(".devicon", {
    content: (reference: any) => reference.getAttribute("title"),
  });

  const singleton = createSingleton(tippyInstances, {
    moveTransition: 'transform 0.2s ease-out',
  });

  singleton.enable();
  document.addEventListener('DOMContentLoaded', function() {
  // const icons = document.querySelectorAll('.devicon');
  // const animations = ['hithere', 'shake', 'swing', 'hindge']; 

  // function applyRandomAnimations() {
  //   icons.forEach(icon => {
  //     animations.forEach(animation => {
  //       icon.classList.remove(animation);
  //     });
  //   });

  //   let selectedIndices = new Set();
  //   while(selectedIndices.size < 4) {
  //     selectedIndices.add(Math.floor(Math.random() * icons.length));
  //   }

  //   selectedIndices.forEach(index => {
  //     const randomAnimation = animations[Math.floor(Math.random() * animations.length)];
  //     icons[Number(index)].classList.add(randomAnimation);
  //   });
  // }

  // applyRandomAnimations();
  // setInterval(applyRandomAnimations, 4000);
});
</script>